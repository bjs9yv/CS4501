models:
   build: .
   external_links:
     - mysql:db
   volumes:
     - ./models/:/app
   command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py loaddata fixtures/db1.json && mod_wsgi-express start-server --reload-on-changes /app/marketplace/wsgi.py"

   ports:
     - "8001:8000"

exp:
   build: .
   links:
     - models:models-api
     - kafka:kafka
     - es:es
   volumes:
     - ./exp/:/app
   command: mod_wsgi-express start-server --reload-on-changes /app/experience_API/wsgi.py &
   ports:
     - "8002:8000"

web:
   build: .
   links:
     - exp:exp-api
   volumes:
     - ./web/:/app
   command: mod_wsgi-express start-server --reload-on-changes /app/web_interface/wsgi.py &
   ports:
     - "8000:8000"

web2:
   build: .
   links:
    - exp:exp-api
   volumes:
    - ./web/:/app
   command: mod_wsgi-express start-server --reload-on-changes /app/web_interace/wsgi.py &
   ports:
    - "8004:8000"

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   build: .
   environment:
     - PYTHONUNBUFFERED=0
   links:
     - kafka:kafka
     - es:es
   volumes:
     - ./batch/:/batch-script
   command: python /batch-script/kafka_ES_worker.py &
   ports:
     - "8003:8000"
   
loadbalancer:
   image: galexrt/pen:latest
   environment:
    - w stats.html
    - l loadbalancer.log
   links:
    - web:web-api
    - web2:web2-api
   container_name: loadbalancer
   command: pen -u root -p 8005:8000
   ports:
    - "8005:8000"
